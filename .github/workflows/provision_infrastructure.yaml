name: voting app deployment to AKS
on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: environment
        default: 'production' 
        options: 
        - dev
        - stage
        - production
 
permissions:
  id-token: write
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: install ansible
        run: |
          sudo pip3 install ansible[azure] -I
          ansible-galaxy collection install azure.azcollection
          sudo pip install -r ~/.ansible/collections/ansible_collections/azure/azcollection/requirements-azure.txt
      - name: show ansible version
        run: ansible --version
      - name: azure log in using OIDC
        uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Run az commands'
        run: |
          echo ${{ github.event.inputs.name }}
          az account show
          az group list
          pwd
      - name: Build and analysis
        env:
          resource_group: votingapp-${{ github.event.inputs.name }}-rg
          location: southindia
          aks_name: votingapp-${{ github.event.inputs.name }}-aks-cluster
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID_ANSIBLE }}
          client_secret: ${{ secrets.AZURE_CLIENT_SECRET}}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          registry_name: votingapp${{ github.event.inputs.name }}acr
        run: ansible-playbook azure_infra_with_ansible/azure_create_aks.yml -e "ansible_python_interpreter=/usr/bin/python3 resource_group=$resource_group location=$location client_id=$client_id client_secret=$client_secret aks_name=$aks_name registry_name=$registry_name"